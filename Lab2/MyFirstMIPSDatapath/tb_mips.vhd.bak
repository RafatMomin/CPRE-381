library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity Testbench_MIPS_Datapath is
end Testbench_MIPS_Datapath;

architecture Behavioral of Testbench_MIPS_Datapath is

    -- Component declaration
    component MIPS_Datapath is
        Port (
            clk       : in  STD_LOGIC;
            rst       : in  STD_LOGIC;
            regWrite  : in  STD_LOGIC;
            nAdd_Sub  : in  STD_LOGIC;
            ALUSrc    : in  STD_LOGIC;
            rs, rt, rd: in  STD_LOGIC_VECTOR (4 downto 0);
            immediate : in  STD_LOGIC_VECTOR (31 downto 0);
            readData1, readData2 : out  STD_LOGIC_VECTOR (31 downto 0);
            result    : out  STD_LOGIC_VECTOR (31 downto 0)
        );
    end component;

    -- Signal declarations
    signal clk, rst, regWrite, nAdd_Sub, ALUSrc : STD_LOGIC;
    signal rs, rt, rd : STD_LOGIC_VECTOR (4 downto 0);
    signal immediate : STD_LOGIC_VECTOR (31 downto 0);
    signal readData1, readData2, result : STD_LOGIC_VECTOR (31 downto 0);

    -- Clock generation
    constant clk_period : time := 10 ns;

begin

    -- Instantiate the Unit Under Test (UUT)
    uut: MIPS_Datapath
        Port map (
            clk => clk,
            rst => rst,
            regWrite => regWrite,
            nAdd_Sub => nAdd_Sub,
            ALUSrc => ALUSrc,
            rs => rs,
            rt => rt,
            rd => rd,
            immediate => immediate,
            readData1 => readData1,
            readData2 => readData2,
            result => result
        );

    -- Clock generation process
    clk_process : process
    begin
        while true loop
            clk <= '0';
            wait for clk_period/2;
            clk <= '1';
            wait for clk_period/2;
        end loop;
    end process;

    -- Stimulus process
    stim_proc: process
    begin
        -- Reset the system
        rst <= '1';
        wait for clk_period;
        rst <= '0';

        -- Test case: addi $1, $0, 1
        regWrite <= '1';
        nAdd_Sub <= '0';
        ALUSrc <= '1';
        rs <= "000;
